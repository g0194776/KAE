/*
SQLyog Ultimate v11.11 (64 bit)
MySQL - 5.5.19 : Database - kae_db
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
USE `kae_db`;

/*Table structure for table `dim_protocol_type` */

DROP TABLE IF EXISTS `dim_protocol_type`;

CREATE TABLE `dim_protocol_type` (
  `ProtocolTypeId` int(11) NOT NULL AUTO_INCREMENT,
  `Name` varchar(128) COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`ProtocolTypeId`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Data for the table `dim_protocol_type` */

insert  into `dim_protocol_type`(`ProtocolTypeId`,`Name`) values (0,'Json'),(1,'Xml'),(2,'Intellegence'),(3,'Metadata');

/*Table structure for table `kae_applications` */

DROP TABLE IF EXISTS `kae_applications`;

CREATE TABLE `kae_applications` (
  `CRC` bigint(20) NOT NULL,
  `PackageName` varchar(512) COLLATE utf8_bin NOT NULL,
  `Version` varchar(512) COLLATE utf8_bin NOT NULL,
  `Description` varchar(2048) COLLATE utf8_bin DEFAULT NULL,
  `Identity` varchar(64) COLLATE utf8_bin NOT NULL,
  `RemotingUri` varchar(2048) COLLATE utf8_bin NOT NULL,
  `Level` varchar(32) COLLATE utf8_bin NOT NULL DEFAULT 'Stable',
  PRIMARY KEY (`CRC`,`Identity`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Data for the table `kae_applications` */

insert  into `kae_applications`(`CRC`,`PackageName`,`Version`,`Description`,`Identity`,`RemotingUri`,`Level`) values (2325220265,'test.package','1.0.0','test package description.','XXXX-XXXX-XXXX-XXXX','http://127.0.0.1/apps/test1.kpp','Stable');

/*Table structure for table `kae_message_identities` */

DROP TABLE IF EXISTS `kae_message_identities`;

CREATE TABLE `kae_message_identities` (
  `ProtocolId` int(11) NOT NULL,
  `ServiceId` int(11) NOT NULL,
  `DetailsId` int(11) NOT NULL,
  `MessageIdentityId` int(11) NOT NULL AUTO_INCREMENT,
  `ProtocolTypeId` int(11) NOT NULL,
  PRIMARY KEY (`MessageIdentityId`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Data for the table `kae_message_identities` */

insert  into `kae_message_identities`(`ProtocolId`,`ServiceId`,`DetailsId`,`MessageIdentityId`,`ProtocolTypeId`) values (1,0,2,1,3),(1,0,3,2,3),(1,0,4,3,2);

/*Table structure for table `message_identities_applications_mapping` */

DROP TABLE IF EXISTS `message_identities_applications_mapping`;

CREATE TABLE `message_identities_applications_mapping` (
  `CRC` bigint(20) NOT NULL,
  `MessageIdentityId` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Data for the table `message_identities_applications_mapping` */

insert  into `message_identities_applications_mapping`(`CRC`,`MessageIdentityId`) values (2325220265,1),(2325220265,2),(2325220265,3);

/* Procedure structure for procedure `spGetMessageIdentitiesByAppCRC` */

/*!50003 DROP PROCEDURE IF EXISTS  `spGetMessageIdentitiesByAppCRC` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `spGetMessageIdentitiesByAppCRC`(
p_CRC bigint)
BEGIN
	select * from `kae_db`.`message_identities_applications_mapping` a
	inner join `kae_db`.`kae_applications` b on a.`CRC` = b.`CRC`
	inner join `kae_db`.`kae_message_identities` c on a.`MessageIdentityId` = c.`MessageIdentityId`;
	-- The SQL blows will be release when KAE finished.
	-- where b.`CRC` = p_CRC;
    END */$$
DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
